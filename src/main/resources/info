отдельные механизмы только в виде кода .как отдельных вызываемых механизмов для работы между собой
вэб сэрвер как обычный сайт например меил ру тоесть доступ к серверу с любого клиента с браузером 
класс приложение запуск поиск в строке зароса 
конфиг авторизация индификация  стоит до деспачер серлета цепочки фильтров далее диспачер сервлет получает запрос далее контролеру
класс контроллер для обработки запроса 
класс сущьность  объект можно представить как данные в БД передает в репозиторий/ORM пользуется моделями данных для общения с БД. Но что, если модели захотелось поменять? Для этого программисты придумали миграции.
класс репозиторий интерфейс имеет метод в который получает найти По Имени Пользователя
класс сервис обрабатывает конкретный запрос 
класс модель обмениваемся с клиентом а сущьность обмениваемся с базой это разные классы 
класс ошибка обработки ошибок 


//модель обмениваемся с клиентом а сущьность обмениваемся с базой это разные классы 
//работа между сервером и клиентом